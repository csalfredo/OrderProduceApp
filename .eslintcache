[{"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/index.js":"1","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/App.js":"2","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/reportWebVitals.js":"3","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/Myuserinput.js":"4","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Searchbar.js":"5","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Orderlist.js":"6","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Ordersection.js":"7","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Numpicker.js":"8","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/CurrentOrder.js":"9","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/MainRouting.js":"10","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/CurrentOrderEdit.js":"11","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Container.js":"12","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Form.js":"13","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/TriggerButton.js":"14","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Modal.js":"15"},{"size":672,"mtime":1609640959866,"results":"16","hashOfConfig":"17"},{"size":1449,"mtime":1613445059576,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606761366261,"results":"20","hashOfConfig":"19"},{"size":341,"mtime":1606870368281,"results":"21","hashOfConfig":"17"},{"size":1844,"mtime":1613770056516,"results":"22","hashOfConfig":"17"},{"size":1826,"mtime":1612668032839,"results":"23","hashOfConfig":"19"},{"size":780,"mtime":1607067255535,"results":"24","hashOfConfig":"19"},{"size":7437,"mtime":1613605143540,"results":"25","hashOfConfig":"17"},{"size":2781,"mtime":1613445341012,"results":"26","hashOfConfig":"19"},{"size":20013,"mtime":1613765191991,"results":"27","hashOfConfig":"19"},{"size":7687,"mtime":1613543689934,"results":"28","hashOfConfig":"19"},{"size":1529,"mtime":1613548582310,"results":"29","hashOfConfig":"19"},{"size":2373,"mtime":1613589089550,"results":"30","hashOfConfig":"19"},{"size":372,"mtime":1613772908475,"results":"31","hashOfConfig":"19"},{"size":1307,"mtime":1613549358050,"results":"32","hashOfConfig":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1d2zdin",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"xfbku4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/index.js",["71"],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/App.js",["72","73","74","75"],"import React, { Component } from 'react'\nimport {Route, Switch, Link} from \"react-router-dom\";\nimport SearchBar from \"./components/Searchbar\";\nimport OrderList from './components/Orderlist';\nimport './App.css';\nimport Myuserinput from './Myuserinput';\nimport CurrentOrder from './components/CurrentOrder';\n// import CurrentOrderEdit from './components/CurrentOrderEdit';\nimport MainRouting from './MainRouting';\n\n\nclass App extends Component {\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n          {/* <h2 className=\"confirmTitle\">Confirm Order</h2> */}\n\n\n      <Switch>\n\n      <Route \n          exact \n          path='/confirmOrder/:editOrderInfo' \n          render={routeProps=><MainRouting {...routeProps}/>} \n          // render={routeProps=><CurrentOrder state={routeProps.match.params.state.produceOrder} />}\n        />\n\n    <Route \n          exact \n          path='/confirmOrder' \n          render={routeProps=><CurrentOrder {...routeProps}/>} \n          // render={routeProps=><CurrentOrder state={routeProps.match.params.state.produceOrder} />}\n        />\n\n    {/* <Route \n          exact \n          path='/confirmOrderEdit' \n          render={routeProps=><CurrentOrderEdit {...routeProps}/>} \n          // render={routeProps=><CurrentOrder state={routeProps.match.params.state.produceOrder} />}\n        /> */}\n\n    <Route exact path='/' component={MainRouting} />\n    </Switch>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n",["76","77"],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/reportWebVitals.js",[],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/Myuserinput.js",[],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Searchbar.js",[],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Orderlist.js",["78"],"import React, { Component } from 'react';\nimport SearchBar from \"../components/Searchbar\";\nimport NumberPicker from \"../components/Numpicker\";\nimport {withRouter} from \"react-router-dom\";\nimport '../App.css'\n\n\n\nclass Orderlist extends Component{\n\n  // constructor() {\n  //   super();\n  // }\n\n\nchangePickerPlus=()=>{\n\n\n  console.log(\"inside function changePicker\");\n\n  console.log(this.props);\n\n  this.props.numPickerPlus();\n\n}\n\ndisplay(value){\n\n// console.log(this.props.produce.produceOrder);\n\nreturn(\n  <div className=\"orderItemSection\">\n\n\n\n         <div className=\"produceName\">\n            { value.produce }\n         </div>\n\n              <div className=\"deleteBtn\">\n                  <button onClick={()=>this.props.onDelete(value.produce)}>X</button>\n              </div>\n       \n            <div className=\"orderInfo\">\n                {/* <p className=\"vendorName\">{value.vendor}</p> */}\n                <p className=\"codeName\">{value.code}</p>\n\n            </div>\n\n\n          {/* <p className=\"codeName\">{value.code}<p>{value.vendor}</p></p> */}\n          {/* <p className=\"vendorName\">{value.vendor}</p> */}\n          <NumberPicker \n            onNumberPickerPlus = {this.props.numPickerPlus}\n            numPickerState = {this.props.produce}\n            desProduceItem = {this.props.desProd}\n            name = {value.produce}\n          />\n  </div>\n)\n}\n\n  render(){\n\n    return (\n    <div className=\"order_Section\">\n    \n    {console.log(\"Alfredo is inside file Orderlist\")}\n    \n{console.log(this.props)}\n\n      <ul>\n        {/* {console.log(this.props.produce.produceOrder)} */}\n        \n        {this.props.produce.produceOrder.map((value,index)=><li key={index}>\n        {index > 0 ? this.display(value) : \"\"}\n\n        </li>)}\n    \n      </ul>\n   \n    </div>\n    );\n  }\n\n}\n\nexport default withRouter(Orderlist);\n","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Ordersection.js",["79","80","81","82"],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Numpicker.js",["83","84","85","86","87","88","89","90","91"],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/CurrentOrder.js",["92","93","94","95"],"import React, { Component } from 'react'\nimport {Route, Switch, Link, Router, withRouter} from \"react-router-dom\";\nimport CurrentOrderEdit from './CurrentOrderEdit';\n\n\nclass CurrentOrder extends Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n   \n        }\n\n        this.state.produceOrder = {...this.props.location.state}\n\n    }//end of constructor\n\n    handleCheckBox2=()=>{\n\n        console.log(\"Inside function handleCheckBox2...\");\n\n        console.log(this.state);\n\n        let temp = this.state.produceOrder;\n\n        const produce_Item = temp.produceOrder.filter(item=>item.checkBox !== true);\n\n        this.setState({produceOrder:{produceOrder: produce_Item}});\n\n        console.log(\"alfredo is testing...\");\n      \n      console.log(produce_Item);\n\n\n      }\n\n    findCheckItem=()=>{\n      \n      let produceCheckBox;\n      let index = 0;\n      let size = this.state.produceOrder.produceOrder.length;\n      let produceItems = this.state.produceOrder.produceOrder;\n      let foundItem;\n      console.log(produceItems);\n\n      console.log(`size is ${size}`);\n\n      while (index < size) {\n          \n        produceCheckBox = produceItems[index].checkBox;\n\n        console.log(produceCheckBox);\n\n        if (produceCheckBox===true) {\n\n            foundItem = produceItems[index].produce;\n        }\n\n        index++;\n      }//end of while loop\n\n      return foundItem;\n    }\n\n    backMain=()=>{\n\n        console.log(\"Inside backMain function\");\n      \n        console.log(this.state.produceOrder);\n\n        // this.props = {...this.state.produceOrder}\n\n        this.props.location.state.produceOrder = {...this.state.produceOrder}\n\n        this.props.history.goBack();\n      \n\n\n        console.log(this.props)\n      }\n\n      getDate(){\n        let value;\n    \n        let currentDate = new Date();\n        let month = currentDate.getMonth();\n        let day = currentDate.getDate();\n    \n        let m = parseInt(month) + 1;\n        let mnth = m.toString();\n    \n        value = mnth + \"-\" + day + \"-\" + currentDate.getFullYear();\n    \n        return value;\n    \n      }\n\n    render() {\n\n        return (\n\n    <div className=\"App3\">\n      <div className=\"confirmTitle\">\n        <h2>Confirm Order</h2>\n      </div>\n      <div className=\"currentDate2\">\n              {this.getDate()}\n      </div>\n        <div className=\"confirmOrder\">\n\n            {/* {console.log(\"Alfredo is testing props...\")}\n              {console.log(this.props)} */}\n\n              <CurrentOrderEdit \n                  state={this.state.produceOrder}\n                  editDelete={this.handleCheckBox2}\n                  backToMain={this.backMain}\n              />\n        </div>\n            \n\n        </div>\n        )\n    }\n}\n\nexport default withRouter(CurrentOrder);\n","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/MainRouting.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React, { Component } from 'react';\nimport {Route, Switch, Link, Router, withRouter} from \"react-router-dom\";\nimport SearchBar from \"./components/Searchbar\";\n// import OrderList from './components/Ordersection';\nimport OrderList from './components/Orderlist';\nimport './App.css';\nimport Myuserinput from './Myuserinput';\nimport currentOrder from './components/CurrentOrder';\nimport { Button } from 'semantic-ui-react';\nimport CurrentOrder from './components/CurrentOrder';\n\n\nclass MainRouting extends Component{\n\n  // constructor(props){\n  //   super(props)\n\n  //   this.handleCheckBox2 = this.handleCheckBox2.bind(this)\n  // }\n\nconstructor(){\n  super()\n  this.state = {\n    data: [\n      { id: 1, produceItem: \"Asparagus\", produceCode: 136, vendor: \"FreshKo\" },\n      { id: 2, produceItem: \"Artichokes\", produceCode: 132, vendor: \"FreshKo\" },\n      { id: 3, produceItem: \"Green Beans\", produceCode: 150, vendor: \"FreshKo\" },\n      { id: 4, produceItem: \"Beets\", produceCode: 156, vendor: \"FreshKo\" },\n      { id: 5, produceItem: \"Broccoli Crown\", produceCode: 174, vendor: \"FreshKo\" },\n      { id: 6, produceItem: \"Cactus Leaves\", produceCode: 318, vendor: \"FreshKo\" },\n      { id: 7, produceItem: \"Cactus Diced\", produceCode: 319, vendor: \"FreshKo\" },\n      { id: 8, produceItem: \"Cabbage\", produceCode: 174, vendor: \"FreshKo\" },\n      { id: 9, produceItem: \"Avocadoes 60cnt\", produceCode: 141, vendor: \"FreshKo\" },\n      { id: 10, produceItem: \"Avocadoes 70cnt\", produceCode: 140, vendor: \"FreshKo\" },\n      { id: 11, produceItem: \"Avocadoes 36cnt\", produceCode: 139, vendor: \"FreshKo\" },\n      { id: 12, produceItem: \"Pinto Beans\", produceCode: 152, vendor: \"FreshKo\" },\n      { id: 13, produceItem: \"Peruano Beans\", produceCode: 151, vendor: \"FreshKo\" },\n      { id: 14, produceItem: \"Bananas\", produceCode: 142, vendor: \"FreshKo\" },\n      { id: 15, produceItem: \"Green Bell Pepper\", produceCode: 382, vendor: \"FreshKo\" },\n      { id: 16, produceItem: \"Red Bell Pepper\", produceCode: 384, vendor: \"FreshKo\" },\n      { id: 17, produceItem: \"Cantaloupe\", produceCode: 284, vendor: \"FreshKo\" },\n      { id: 18, produceItem: \"Cauliflower\", produceCode: 190, vendor: \"FreshKo\" },\n      { id: 19, produceItem: \"Celery\", produceCode: 194, vendor: \"FreshKo\" },\n      { id: 20, produceItem: \"Cucumber\", produceCode: 216, vendor: \"FreshKo\" },\n      { id: 21, produceItem: \"Cilantro\", produceCode: 192, vendor: \"FreshKo\" },\n      { id: 22, produceItem: \"Carrots Loose\", produceCode: 184, vendor: \"FreshKo\" },\n      { id: 23, produceItem: \"Chayote\", produceCode: 458, vendor: \"FreshKo\" },\n      { id: 24, produceItem: \"Cherries\", produceCode: 204, vendor: \"FreshKo\" },\n      { id: 25, produceItem: \"Coconuts\", produceCode: 300, vendor: \"FreshKo\" },\n      { id: 26, produceItem: \"Garlic\", produceCode: 230, vendor: \"FreshKo\" },\n      { id: 27, produceItem: \"Apple Fuji\", produceCode: 108, vendor: \"FreshKo\" },\n      { id: 28, produceItem: \"Apple Gala\", produceCode: 110, vendor: \"FreshKo\" },\n      { id: 29, produceItem: \"Apple Gold\", produceCode: 112, vendor: \"FreshKo\" },\n      { id: 30, produceItem: \"Apple Granny Smith\", produceCode: 114, vendor: \"FreshKo\" },\n      { id: 31, produceItem: \"Mini Bananas\", produceCode: 144, vendor: \"FreshKo\" },\n      { id: 32, produceItem: \"Plantain Banana\", produceCode: 146, vendor: \"FreshKo\" },\n      { id: 33, produceItem: \"Strawberries\", produceCode: 166, vendor: \"FreshKo\" },\n      { id: 34, produceItem: \"Cabbage Red\", produceCode: 178, vendor: \"FreshKo\" },\n      { id: 35, produceItem: \"Corn Yellow\", produceCode: 212, vendor: \"FreshKo\" },\n      { id: 36, produceItem: \"Corn White\", produceCode: 214, vendor: \"FreshKo\" },\n      { id: 37, produceItem: \"Egg Plant\", produceCode: 224, vendor: \"FreshKo\" },\n      { id: 38, produceItem: \"Garlic\", produceCode: 230, vendor: \"FreshKo\" },\n      { id: 39, produceItem: \"Ginger\", produceCode: 232, vendor: \"FreshKo\" },\n      { id: 40, produceItem: \"Grape Fruit\", produceCode: 238, vendor: \"FreshKo\" },\n      { id: 41, produceItem: \"Red Grapes\", produceCode: 250, vendor: \"FreshKo\" },\n      { id: 42, produceItem: \"Green Grapes\", produceCode: 248, vendor: \"FreshKo\" },\n      { id: 43, produceItem: \"Jicama\", produceCode: 258, vendor: \"FreshKo\" },\n      { id: 44, produceItem: \"Kiwi\", produceCode: 262, vendor: \"FreshKo\" },\n      { id: 45, produceItem: \"Lemon\", produceCode: 266, vendor: \"FreshKo\" },\n      { id: 46, produceItem: \"Lettuce\", produceCode: 268, vendor: \"FreshKo\" },\n      { id: 47, produceItem: \"Red Lettuce\", produceCode: 274, vendor: \"FreshKo\" },\n      { id: 48, produceItem: \"Leaf Lettuce\", produceCode: 272, vendor: \"FreshKo\" },\n      { id: 49, produceItem: \"Romaine Lettuce\", produceCode: 276, vendor: \"FreshKo\" },\n      { id: 50, produceItem: \"Lime\", produceCode: 278, vendor: \"FreshKo\" },\n      { id: 51, produceItem: \"Mango\", produceCode: 280, vendor: \"FreshKo\" },\n      { id: 52, produceItem: \"Honeydew Melon\", produceCode: 300, vendor: \"FreshKo\" },\n      { id: 53, produceItem: \"Seedless Watermelon\", produceCode: 304, vendor: \"FreshKo\" },\n      { id: 54, produceItem: \"Watermelon Seeded\", produceCode: 306, vendor: \"FreshKo\" },\n      { id: 55, produceItem: \"Mushrooms Loose\", produceCode: 230, vendor: \"FreshKo\" },\n      { id: 56, produceItem: \"Nectarines\", produceCode: 320, vendor: \"FreshKo\" },\n      { id: 57, produceItem: \"Green Onions\", produceCode: 342, vendor: \"FreshKo\" },\n      { id: 58, produceItem: \"Mexican Green Onions\", produceCode: 341, vendor: \"FreshKo\" },\n      { id: 59, produceItem: \"Red Onion\", produceCode: 344, vendor: \"FreshKo\" },\n      { id: 60, produceItem: \"Yellow Onion\", produceCode: 346, vendor: \"FreshKo\" },\n      { id: 61, produceItem: \"White Onion\", produceCode: 348, vendor: \"FreshKo\" },\n      { id: 62, produceItem: \"Oranges\", produceCode: 350, vendor: \"FreshKo\" },\n      { id: 63, produceItem: \"Parsley\", produceCode: 354, vendor: \"FreshKo\" },\n      { id: 64, produceItem: \"Papaya\", produceCode: 356, vendor: \"FreshKo\" },\n      { id: 65, produceItem: \"Peaches\", produceCode: 360, vendor: \"FreshKo\" },\n      { id: 66, produceItem: \"Bartlett Pear\", produceCode: 264, vendor: \"FreshKo\" },\n      { id: 67, produceItem: \"Bosco Pear\", produceCode: 366, vendor: \"FreshKo\" },\n      { id: 68, produceItem: \"Dijion Pear\", produceCode: 370, vendor: \"FreshKo\" },\n      { id: 69, produceItem: \"Manzano Pepper\", produceCode: 230, vendor: \"FreshKo\" },\n      { id: 70, produceItem: \"Jalapeno Pepper\", produceCode: 388, vendor: \"FreshKo\" },\n      { id: 71, produceItem: \"Green Long Pepper\", produceCode: 390, vendor: \"FreshKo\" },\n      { id: 72, produceItem: \"Yellow Pepper\", produceCode: 400, vendor: \"FreshKo\" },\n      { id: 73, produceItem: \"Serrano Pepper\", produceCode: 402, vendor: \"FreshKo\" },\n      { id: 74, produceItem: \"Pasilla Pepper\", produceCode: 404, vendor: \"FreshKo\" },\n      { id: 75, produceItem: \"Persimmons\", produceCode: 411, vendor: \"FreshKo\" },\n      { id: 76, produceItem: \"Pineapple\", produceCode: 406, vendor: \"FreshKo\" },\n      { id: 77, produceItem: \"Plums\", produceCode: 410, vendor: \"FreshKo\" },\n      { id: 78, produceItem: \"Pomegranates\", produceCode: 412, vendor: \"FreshKo\" },\n      { id: 79, produceItem: \"Red Potatoes Loose\", produceCode: 416, vendor: \"FreshKo\" },\n      { id: 80, produceItem: \"Russet Potatoes Loose\", produceCode: 424, vendor: \"FreshKo\" },\n      { id: 81, produceItem: \"Russet Potatoes 5lb Bag\", produceCode: 426, vendor: \"FreshKo\" },\n      { id: 82, produceItem: \"Russet Potatoes 10lb Bag\", produceCode: 428, vendor: \"FreshKo\" },\n      { id: 83, produceItem: \"Russet Potatoes 15lb Bag\", produceCode: 430, vendor: \"FreshKo\" },\n      { id: 84, produceItem: \"Radishes\", produceCode: 438, vendor: \"FreshKo\" },\n      { id: 85, produceItem: \"Spinach\", produceCode: 450, vendor: \"FreshKo\" },\n      { id: 86, produceItem: \"Italian Squash\", produceCode: 460, vendor: \"FreshKo\" },\n      { id: 87, produceItem: \"Mexican Squash\", produceCode: 461, vendor: \"FreshKo\" },\n      { id: 88, produceItem: \"Yellow Squash\", produceCode: 464, vendor: \"FreshKo\" },\n      { id: 89, produceItem: \"Tangerine\", produceCode: 468, vendor: \"FreshKo\" },\n      { id: 90, produceItem: \"Tomato\", produceCode: 478, vendor: \"FreshKo\" },\n      { id: 91, produceItem: \"Roma\", produceCode: 482, vendor: \"FreshKo\" },\n      { id: 92, produceItem: \"Yams\", produceCode: 488, vendor: \"FreshKo\" },\n\n    ],\n    keyword: \"\",\n    results: [],\n \n      produceOrder: [\n        {id: \"\",produce:\"\",code:\"\",vendor:\"\",checkBox:\"\", quantity:\"\"}\n      ],\n\n    codeOrder: [],\n    vendors: [],\n    produceItemNum: 0,\n    newPage: 'currentOrder',\n    setting: false,\n    foundItem: false,\n    editproduceOrder:[],\n    Displayed: false,\n    count: 0,\n    location: \"\",\n    currentItemProduce: 1,\n    DisplayOrderSection: false,\n    path: \"\",\n    itemExist: false,\n\n  };\n\n  \n\n\n}\n\n  getDate(){\n    let value;\n\n    let currentDate = new Date();\n    let month = currentDate.getMonth();\n    let day = currentDate.getDate();\n\n    let m = parseInt(month) + 1;\n    let mnth = m.toString();\n\n    value = mnth + \"-\" + day + \"-\" + currentDate.getFullYear();\n\n    return value;\n\n  }\n\n\n  matchName = (produceItem, keyword) => {\n    var keyLen = keyword.length;\n    produceItem = produceItem.toLowerCase().substring(0, keyLen);\n    //returns true only if we have a match and keyword isn't empty\n    return produceItem === keyword && keyLen !== 0;\n  };\n\n  onSearch = text => {\n    let { data } = this.state;\n    //check to see if we found a match, if so, add it to results\n    var results = data.filter(item => true === this.matchName(item.produceItem, text));\n    //update state changes\n    this.setState({ results });\n    \n  };\n\n  updateField = (field, value, update = true) => {\n    console.log(\"TRYING TO FIND THE INPUT.........\");\n\n    this.setState({itemExist: false});\n    \n    if (update) this.onSearch(value);\n    this.setState({ [field]: value });\n  };\n\n  myfindProduceItem = (e)=>{\n    e.preventDefault();\n\n    let index = 0;\n    let TempValue;\n    let found = false;\n    let list;\n    let newItem = \"orange\";\n    let produce = this.state.keyword;\n    let locationFound;\n    let tempCode;\n    let tempVendor;\n    let tempId;\n    let newProduceArray;\n    let newArrayCounter = 0;\n    let tempOrder = this.state;\n    let itemExist = false;\n\n  \n   console.log(\"produce is \" + produce);\n   \n   console.log(this.state.produceOrder);\n   \n   itemExist = this.checkProduceItemExist(produce);\n\n   if (itemExist) {\n     \n      console.log(\"Item Exist\");\n\n      this.setState({itemExist: true});\n   }\n   else{\n    while (index < this.state.data.length) {\n      \n      if (produce.length !== 0) {\n     \n\n        if (produce === this.state.data[index].produceItem) {\n\n          found =  true;\n          \n          locationFound = index;\n  \n          index = this.state.data.length;\n\n          this.setState({foundItem: true});\n        }\n      }\n      else{\n        console.log(\"the length is equal zero\");\n      }\n      \n      index++;\n    }//end of while loop\n    \n\n    \n    if (found === true) {\n      tempCode = this.state.data[locationFound].produceCode;\n      tempVendor = this.state.data[locationFound].vendor;\n      tempId =  this.state.data[locationFound].id;\n\n      // console.log(\"tempCode is \" + tempCode + \", and temVendor is \" + tempVendor);\n      \n      // this.setState({order: {produceOrder: [{produce: produce}]}});\n\n      let temp = this.state;\n      temp.produceOrder.push({id: tempId, produce:produce, code:tempCode, vendor: tempVendor, checkBox: false, quantity: 1});\n      this.setState({order:temp});\n\n      // temp.produceOrder.push({code:tempCode});\n      // this.setState({order:temp})\n\n      // console.log(\"value is \" + this.state.produceOrder.length);\n      // console.log(\"value is \" + this.state.order.produceOrder[0].code);\n      // console.log(\"value is \" + this.state.order.produceOrder[0].vendor);\n\n\n    }//end of if statement where it's checking if the item exist\n\n    console.log(this.state.produceOrder);\n   }\n\n\n  }\n\n  checkProduceItemExist=(produce)=>{\n\n    let index = 0;\n    let tempProduceItem;\n    let match = false;\n\n    console.log(this.state.produceOrder.length);\n\n    while (index <= this.state.produceOrder.length-1) {\n\n          console.log(\"index = \" + index);\n\n     \n          tempProduceItem = this.state.produceOrder[index].produce;\n\n            console.log(tempProduceItem.length);\n\n            console.log(produce.length);\n\n          if(tempProduceItem.normalize() === produce.normalize()){\n             match = true;\n\n             break\n          }\n          else{\n \n            console.log(\"this means index is \" + index);\n            \n            console.log(this.state.produceOrder);\n            match = false;\n          }\n        \n\n      index++;\n    }//end of while loop\n\n    console.log(index + \"=\" + tempProduceItem + \", \" + produce);\n\n    if(this.state.produceOrder.length === 0){//WHEN PRODUCEORDER ARRAY IS EMPTY\n      match = false;\n    }\n    return match;\n  }\n\nhandleDelete=(myproduceItem)=>{\n\n  let temp;\n\n  // console.log(\"Y0U HAVE CLICKED ON HANDLE DELETE--- BUTTON, and produce item is \" + myproduceItem);\n  \n  // console.log(this.props.location);\n\n  // console.log(this.state.produceOrder);\n\n  if (this.props.location.pathname !== '/') {\n    \n    console.log(\"this is not the root\");\n\n      temp = this.props.location.currentState;\n\n      const produce_Item = temp.produceOrder.filter(item=>item.produce !== myproduceItem);\n\n      console.log(produce_Item);\n    \n      // this.setState({produceOrder: [...this.state.order.produceOrder.filter(item=> item.produce !== myproduceItem)]});\n    \n      console.log(\"alfredo is testing...\");\n    \n      console.log(produce_Item);\n\n     \n      this.setState({produceOrder: [...produce_Item]});\n\n      // console.log(this.state.produceOrder);\n\n       this.props.location.currentState.produceOrder = [...produce_Item];\n\n      // console.log(this.props.location.currentState);\n\n      // console.log(this.state.produceOrder);\n  }\n  else{\n    temp = this.state;\n\n    const produce_Item = temp.produceOrder.filter(item=>item.produce !== myproduceItem);\n\n    // console.log(produce_Item);\n  \n    // this.setState({produceOrder: [...this.state.order.produceOrder.filter(item=> item.produce !== myproduceItem)]});\n  \n    // console.log(\"AGAIN...alfredo is testing...\");\n  \n    this.setState({produceOrder: produce_Item});\n  }\n\n  // console.log(this.state.produceOrder);\n\n}\n\nhandleCheckBox2=()=>{\n\n  // console.log(\"Testing function handleCheckBox2\");\n}\n\ndisplayOrderList=(order)=>{\n\n  console.log(order);\n\nif (this.state.produceOrder.length > 1) {\n  let cnt = this.state.produceOrder.quantity;\n\n  let produceDesLength = this.state.produceOrder.length;\n\n  let produceDesLenght2 = order.produceOrder.length;\n\n  let descProduce = this.state.produceOrder[produceDesLength-1].produce;\n\n  let descProduce2 = order.produceOrder[produceDesLenght2-1].produce;\n\n  console.log(\"produceDesLength2 is \" + produceDesLenght2);\n\n  console.log(\"this is from produceDes\");\n  \n  console.log(descProduce);\n\n  console.log(descProduce2);\n\n  console.log(cnt);\n\n\n  if (this.state.foundItem === true) {\n      \n          console.log(\"DISPLAYING ORDERLIST...THIS.STATE.FOUNDITEM IS ... \" + this.state.foundItem);\n\n          console.log(order);\n\n          return(<OrderList\n            produce = {this.state}\n            onDelete={this.handleDelete}\n            numPickerPlus={this.nPickerPlus}\n            desProd = {descProduce}\n          /> )\n     \n    }\n  else{\n\n        console.log(\"DISPLAYING ORDERLIST...THIS.STATE.FOUNDITEM IS====> \" + this.state.foundItem + \"==>\");\n\n        console.log(order);\n\n        return(<OrderList\n          produce = {order}\n          onDelete={this.handleDelete}\n          numPickerPlus={this.nPickerPlus}\n          desProd = {descProduce2}\n    \n        /> )\n    }\n\n  }\n\n}\n\nupdateStateProduceOrder=(order)=>{\n\n  console.log(\"inside function updateStateProduceOrder\");\n\n  console.log(order);\n\n  \n  console.log(this.state.produceOrder);\n\n    \n\n}\n\ndisplayedOrder=()=>{\n\n  this.state.path = this.props.location.pathname;\n\n\n  console.log(\"---empty----\");\n\n  console.log(\"AND AT THIS POINT PRODUCEORDER HAS \");\n\n  console.log(this.props.location.currentState);\n\n  this.state.location = this.props.location.pathname;\n\n  this.state.produceOrder = [...this.props.location.currentState.produceOrder];\n\n  console.log(this.state);\n\n  this.props.location.pathname = '/';\n\n  console.log(this.props.location.pathname);\n\n\n  return (this.currentOrder_Section());\n\n}\n\nupdateProduceOrder=()=>{\n\n  this.state.produceOrder = [...this.props.location.currentState.produceOrder];\n\n\n  return (this.displayOrderList(this.state));\n\n}\n\nnPickerPlus=(cnt)=>{\n  console.log(\"INISDE NPICKER------------>\")\n\n  cnt++;\n\n  console.log(this.state.produceOrder);\n\n  let produceItems = [...this.state.produceOrder];\n\n  let produceItem ={...produceItems[3]};\n\n\nconsole.log(produceItem);\n\n  produceItem.quantity = cnt;\n\n  produceItems[4] = produceItem;\n\n  // this.setState({produceItems});\n\n\n  console.log(produceItem);\n}\n\ncurrentOrder_Section=()=>{\n\n\n      this.state.DisplayOrderSection = true;\n\n        return(  <div className = \"currentOrderSection\">\n\n            <div className=\"order_Section\">\n                \n\n                  {console.log(\"==>this.state.foundItem is==> \" + this.state.foundItem)}\n\n                  {console.log(this.props)}\n\n                  {console.log(this.props.location.pathname)}\n\n                  {this.props.location.pathname === '/' ? this.displayOrderList(this.state): this.updateStateProduceOrder(this.state)}\n            \n\n            </div>\n        </div>);\n}\n\ndisplay_CompleteOrder_Button=()=>{\n\n  return(\n\n    <Link className=\"CompleteOrderButton\" to={{\n      \n      pathname: '/confirmOrder',\n     \n        state: this.state,\n      \n\n    }}>Complete Order</Link>\n\n  );\n\n}\n\n  render(){\n\n    let { results, keyword } = this.state;\n\n    return (\n  \n      <div className=\"App2\">\n\n          <div className=\"currentDate\">\n              {this.getDate()}\n          </div>\n\n\n        <div className=\"Head\">\n       \n            <h3>PRODUCE LIST</h3>\n        </div>\n\n          <div className=\"autocomplete\">\n\n            <div className=\"myInput\">\n              <SearchBar\n                results={results}\n                keyword={keyword}\n                updateField={this.updateField}\n              />\n\n            </div>\n          </div>\n          \n      \n        <button onClick={(e)=>this.myfindProduceItem(e)} className=\"enterBtn\">ADD ITEM</button>\n\n        {/* <div className=\"messageExist\">\n            <h4>Item Exist</h4>\n        </div> */}\n\n        {console.log(\"testing itemExist ...\" + this.state.itemExist)}\n\n        {/* <div className= \"messageExist\">\n           {this.state.itemExist === true ? <h4>Item Exist</h4>  : \"hidden\"}\n        </div> */}\n\n<div className=\"messageExist\" style={{display: this.state.itemExist ?  \"block\" : \"none\"}}><h4>ITEM EXIST</h4></div>\n          {this.props.location.pathname === '/' ? this.currentOrder_Section() : console.log(\"the root path\")}\n\n        <div>\n\n        <Link to='/'></Link>\n\n          {console.log(this.state.DisplayOrderSection)}\n\n          {this.props.location.pathname === '/' ? this.display_CompleteOrder_Button() : console.log(\"did not call display_CompleteOrder_Button\")}\n\n \n          {console.log(this.props)}\n\n          {console.log(\"---->THIS.STATE.FOUNDITEM IS <----\" + this.state.foundItem)}\n\n          {console.log(this.props)}\n          \n          {console.log(this.props.location.pathname)}\n\n\n          {\n             this.props.location.pathname === '/confirmOrder/editOrderInfo' ? this.displayedOrder() : console.log(this.props.location.pathname)\n             //this.displayOrderList(this.props.location.currentState)\n          }\n\n          { \n             this.state.path === '/confirmOrder/editOrderInfo' ? this.display_CompleteOrder_Button() : console.log(this.props.location.pathname)\n        \n          }\n\n          {  this.state.path = '/'}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(MainRouting);\n","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/CurrentOrderEdit.js",["115","116","117","118","119"],"import React, { Component } from 'react'\nimport { withRouter, Link } from \"react-router-dom\";\nimport form from './Form.js'\nimport Container from './Container';\n\nclass CurrentOrderEdit extends Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            orderLength: 0,\n        }\n\n        this.state.produceOrder = {...this.props.location.state}\n\n    }//end of constructor\n\n    handleCheckBox=(e)=>{\n        // console.log(this.props.location.state.produceOrder);\n\n        // console.log(this.state.produceOrder.produceOrder);\n\n        let index = 0;\n        \n        console.log(\"inside function handlecheckbox...\");\n\n        // console.log(this.props.state);\n\n        let checkBoxArray = this.props.state.produceOrder;\n\n        // console.log(checkBoxArray);\n\n        // console.log(\"inside function handleCheckBox \" + e.target.value);\n\n        // console.log(\"e.target.checked is from \" + e.target.value + \"-\" + e.target.checked);\n\n        // console.log(checkBoxArray);\n\n        checkBoxArray.forEach(value =>{\n\n\n     \n            // console.log(\"value of checkbox is \" + value.checkBox);\n\n            if(value.produce === e.target.value){\n                if (value.checkBox === false) {\n\n                    value.checkBox = e.target.checked;\n\n                    // console.log(\"e.target.checked is from \" + e.target.value + \"-\" + e.target.checked);\n\n                    \n                }\n                else{\n                    // console.log(\"---->alfredo is testing e.target.checked\");\n                    \n                    // console.log(e.target.checked);\n\n                    value.checkBox = e.target.checked;\n                }\n\n            }\n\n\n         index++;\n\n        })//end of loop\n     \n            // console.log(checkBoxArray);\n            \n    }\n\n    removeItems=(myProduceItem)=>{\n        // console.log(this.state);\n        \n        // console.log(myProduceItem);\n\n        // console.log(this.props.location.state.produceOrder);\n\n        // console.log(this.state.produceOrder.produceOrder);\n\n        const produce_Item = this.state.produceOrder.produceOrder.filter(item=>item.checkBox !== true);\n\n        this.setState({produceOrder: produce_Item});\n\n        // console.log(\"alfredo is testing...\");\n      \n    //   console.log(produce_Item);\n\n      return produce_Item;\n    }\n\n    getId=(i, produce)=>{\n\n\n    }\n\n    getSortedOrder=()=>{\n        let myId;\n        // console.log(this.props.location.state.produceOrder);\n \n        // console.log(this.state.produceOrder.produceOrder);\n\n        // console.log(this.props.state);\n\n\n        //TODO: THIS WILL SORT THE PRODUCE ARRAY AND WILL DISPLAY ALL PRODUCE ITEMS\n        const myData = [].concat(this.props.state.produceOrder).sort((a,b)=> a.produce > b.produce ? 1 : -1).map((item,i)=>\n    \n        <li key={item.id}>\n            {i === 0 ? <div> \n                {/* <button className=\"removeSelected\" onClick={()=>this.props.editDelete()}>Remove Items</button> */}\n\n                </div>: <div className=\"check\">\n                    {/* {console.log(item.check)} */}\n                    <input \n                        onChange={(e)=>this.handleCheckBox(e)} \n                        type=\"checkbox\"\n                        // checked={item.check}\n                        value = {item.produce}\n                    />\n                </div>}\n            {item.produce}\n\n        </li>)\n        \n        // console.log(myData);\n        \n        return myData;\n\n    }   \n\n    backToMainOrder=()=>{\n\n        // console.log(\"inside function backToMainOrder\");\n\n        this.props.history.push(`/confirmOrder/${this.props.state}`)\n    }\n\n    // clearCheckBox=(length1,length2, arrayOrder)=>{\n    //     let index = 0;\n\n    //     console.log(length1 + \", \" + length2);\n\n    //     console.log(arrayOrder);\n\n    //     if (length1 !== length2) {\n    //         console.log(\"lengths are not matching\");\n\n    //         arrayOrder.forEach(value=>{\n         \n\n    //             <input \n    //             onChange={this.clearAllCheckBoxes(arrayOrder, value.produce)} \n             \n    //             type=\"checkbox\"\n    //             checked={true}\n    //             value = {value.produce}\n    //         />\n                \n    //         })\n\n    //     }\n    //     else{\n    //         console.log(\"lengths do match\");\n    //     }\n\n    //     index++;\n    // }\n\n\n    clearAllCheckBoxes=(arrayOrder)=>{\n\n        let index = 0;\n  \n        console.log(\"inside function clearAllCheckBoxes....\");\n\n        // console.log(arrayOrder);\n   \n        const myData = [].concat(this.props.state.produceOrder).sort((a,b)=> a.produce > b.produce ? 1 : -1).map((item,i)=>\n        <li key={i}>\n            {i === 0 ? <div> \n                {/* <button className=\"removeSelected\" onClick={()=>this.props.editDelete()}>Remove Items</button> */}\n\n                </div>: <div className=\"check\">\n                    {/* {console.log(item.check)} */}\n                    <input \n                   \n                        onChange={(e)=>this.handleCheckBox(e)} \n                        type=\"checkbox\"\n                        checked={false}\n                        value = {item.produce}\n                    />\n                </div>}\n            {item.produce}\n\n        </li>)\n         \n\n        //  console.log(myData);\n\n         return myData;\n    }\n\n    onSubmit =(e)=>{\n\n        let email = \"johnDoe@gmail.com\"\n        console.log(\"inside function sendEmail function\");\n\n        // console.log(value.produce);\n\n        console.log(email);\n    }\n\n\n\n    render(){\n\n        let sortedOrder;\n        let triggerText= 'Open form';\n\n        return (\n        \n        <div>\n        \n            <div className=\"currentConfirmOrder\">\n\n            {/* <button className=\"btnPrevious\" onClick={this.props.backToMain}>Main Page</button> */}\n\n            {/* <button className=\"btnPrevious\" onClick={this.backToMain}>Main Page</button> */}\n\n            {/* {console.log(\"....testing this.props.state....\")}\n            {console.log(this.props.state)} */}\n\n                    <ul>\n                        {/* {this.clearAllCheckBoxes(this.props.state.produceOrder)} */}\n                        {sortedOrder = this.getSortedOrder()}\n\n\n                        {/* {console.log(\"ok...testing again...\")}\n                        {console.log(this.props.state)}\n                        {console.log(sortedOrder)} */}\n\n                    </ul>\n\n            </div>\n\n            <div className=\"buttonSection\">\n\n                <div className=\"backButton\">\n                    <Link to={{ pathname: `/confirmOrder/editOrderInfo`, currentState: this.props.state}}>Back To Main</Link>\n                </div>\n                {/* {console.log(this.props.location.state.produceOrder.length)} */}\n\n                {/* {this.state.orderLength = this.props.location.state.produceOrder.length} */}\n                    <button className=\"removeSelected\" onClick={()=>this.props.editDelete()}>Remove Items</button>\n\n                    {/* {console.log(this.props.state.produceOrder.length)} */}\n\n                    {/* {this.clearCheckBox(this.state.orderLength, this.props.state.produceOrder.length, this.props.state.produceOrder)} */}\n                    {/* <button className=\"btnSend\" onSubmit={(e)=>this.sendEmail(e)}>Send</button> */}\n\n{/* {console.log(this.props.location.state.produceOrder)} */}\n\n                    <Container triggerText ={triggerText} \n                    onSubmit={this.onSubmit} \n                    produceOrderInfo = {this.props.location.state.produceOrder}\n                    />\n            </div>\n\n\n        </div>\n        )\n    }\n\n}\n\nexport default withRouter(CurrentOrderEdit);\n","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Container.js",[],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Form.js",["120"],"import React, { Component } from 'react';\n// import React from 'react';\nimport emailjs from 'emailjs-com';\n\nclass Form extends Component{\n  constructor(props){\n  \n    super(props);\n\n    this.state ={\n      textAreaValue: \"\",\n    }\n\n    console.log(this.props.order);\n\n    // this.getProduceOrder();\n\n}//end of constructor\n\n  onSubmit=(e)=> {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'template_cn4u2bm', e.target, 'user_KD4qg7Toe0JjVIPUUhr70')\n      .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });\n      e.target.reset();\n\n  }\n\n  getProduceOrder=()=>{\n\n    let index = 0;\n\n    this.props.order.forEach(item => {\n      \n      if (index > 0) {\n\n        console.log(item);\n\n        this.state.textAreaValue = this.state.textAreaValue + this.printItem(index);\n      }\n      \n      index++;\n\n    });//end of while loop\n    \n  }\n\n  getTabs=()=>{\n\n    return(\"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\");\n  }\n\n  getLines=()=>{\n    return(\"------------------------------------------------------------------------------------------------------------------------------------------------------>\");\n  }\n\n  printItem=(location)=>{\n    \n    let produceItem;\n\n      produceItem = \"     \" + this.props.order[location].produce + \"--------->\" + this.props.order[location].quantity + '\\n\\n'\n\n      return produceItem;\n\n  }\n\n  displayTextArea=()=>{\n\n   return (console.log(\"displayTextArea\"));\n\n  }\n\n  render(){\n\n  return (\n  <div>\n    {this.getProduceOrder()}\n\n    <form className=\"contact-form\" onSubmit={this.onSubmit}>\n      <div className =\"nameInput\">\n        <label>Name</label>\n        <input className=\"name\" type=\"text\" name=\"name\"/>\n      </div>\n\n      <div className=\"emailInput\">\n        <label>Email</label>\n        <input className=\"email\" type=\"email\" name=\"email\"/>\n      </div>\n\n      <div className=\"subjectInput\">\n        <label>Subject</label>\n        <input type=\"subject\" name=\"subject\"/>\n      </div>\n\n      <label className=\"message\">Message</label>\n\n      <textarea \n      value={this.state.textAreaValue}\n      onChange={this.getProduceOrder}\n      // value={\"testing\"}\n      row={10}\n      cols={30}\n      name=\"message\" />\n      <input type=\"submit\" value=\"message\" />\n    </form>\n  </div>\n  )\n  }\n}\n\nexport default Form;\n\n","/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/TriggerButton.js",[],["121","122"],"/home/ninja/Desktop/produceOrder_project/produreorder_app/src/components/Modal.js",[],{"ruleId":"123","severity":1,"message":"124","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":2,"column":24,"nodeType":"125","messageId":"126","endLine":2,"endColumn":28},{"ruleId":"123","severity":1,"message":"128","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"129","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},{"ruleId":"123","severity":1,"message":"130","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"128","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":17},{"ruleId":"123","severity":1,"message":"135","line":9,"column":13,"nodeType":"125","messageId":"126","endLine":9,"endColumn":18},{"ruleId":"123","severity":1,"message":"136","line":10,"column":13,"nodeType":"125","messageId":"126","endLine":10,"endColumn":17},{"ruleId":"123","severity":1,"message":"137","line":13,"column":13,"nodeType":"125","messageId":"126","endLine":13,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":13,"column":82,"nodeType":"140","messageId":"141","endLine":13,"endColumn":84},{"ruleId":"123","severity":1,"message":"142","line":47,"column":17,"nodeType":"125","messageId":"126","endLine":47,"endColumn":28},{"ruleId":"123","severity":1,"message":"143","line":48,"column":17,"nodeType":"125","messageId":"126","endLine":48,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":56,"column":17,"nodeType":"146","endLine":56,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":57,"column":17,"nodeType":"146","endLine":57,"endColumn":27},{"ruleId":"123","severity":1,"message":"147","line":104,"column":9,"nodeType":"125","messageId":"126","endLine":104,"endColumn":18},{"ruleId":"123","severity":1,"message":"148","line":195,"column":9,"nodeType":"125","messageId":"126","endLine":195,"endColumn":12},{"ruleId":"123","severity":1,"message":"147","line":207,"column":9,"nodeType":"125","messageId":"126","endLine":207,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":308,"column":13,"nodeType":"146","endLine":308,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":309,"column":13,"nodeType":"146","endLine":309,"endColumn":23},{"ruleId":"123","severity":1,"message":"149","line":2,"column":9,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"150","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":22},{"ruleId":"123","severity":1,"message":"127","line":2,"column":24,"nodeType":"125","messageId":"126","endLine":2,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":2,"column":30,"nodeType":"125","messageId":"126","endLine":2,"endColumn":36},{"ruleId":"123","severity":1,"message":"149","line":2,"column":9,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"150","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":2,"column":30,"nodeType":"125","messageId":"126","endLine":2,"endColumn":36},{"ruleId":"123","severity":1,"message":"130","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":19},{"ruleId":"123","severity":1,"message":"151","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":20},{"ruleId":"123","severity":1,"message":"152","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":16},{"ruleId":"123","severity":1,"message":"153","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"123","severity":1,"message":"154","line":194,"column":9,"nodeType":"125","messageId":"126","endLine":194,"endColumn":18},{"ruleId":"123","severity":1,"message":"155","line":196,"column":9,"nodeType":"125","messageId":"126","endLine":196,"endColumn":13},{"ruleId":"123","severity":1,"message":"156","line":197,"column":9,"nodeType":"125","messageId":"126","endLine":197,"endColumn":16},{"ruleId":"123","severity":1,"message":"157","line":203,"column":9,"nodeType":"125","messageId":"126","endLine":203,"endColumn":24},{"ruleId":"123","severity":1,"message":"158","line":204,"column":9,"nodeType":"125","messageId":"126","endLine":204,"endColumn":24},{"ruleId":"123","severity":1,"message":"159","line":205,"column":9,"nodeType":"125","messageId":"126","endLine":205,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":454,"column":3,"nodeType":"146","endLine":454,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":463,"column":3,"nodeType":"146","endLine":463,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":465,"column":3,"nodeType":"146","endLine":465,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":480,"column":3,"nodeType":"146","endLine":480,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":514,"column":7,"nodeType":"146","endLine":514,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":625,"column":14,"nodeType":"146","endLine":625,"endColumn":24},{"ruleId":"123","severity":1,"message":"160","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"135","line":65,"column":10,"nodeType":"125","messageId":"126","endLine":65,"endColumn":15},{"ruleId":"123","severity":1,"message":"161","line":99,"column":13,"nodeType":"125","messageId":"126","endLine":99,"endColumn":17},{"ruleId":"123","severity":1,"message":"135","line":174,"column":13,"nodeType":"125","messageId":"126","endLine":174,"endColumn":18},{"ruleId":"123","severity":1,"message":"162","line":237,"column":26,"nodeType":"125","messageId":"126","endLine":237,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":43,"column":9,"nodeType":"146","endLine":43,"endColumn":19},{"ruleId":"131","replacedBy":"163"},{"ruleId":"133","replacedBy":"164"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'SearchBar' is defined but never used.","'OrderList' is defined but never used.","'Myuserinput' is defined but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'index' is assigned a value but never used.","'temp' is defined but never used.","'produceProducts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'tempCounter' is assigned a value but never used.","'tempValue' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'MainRoute' is assigned a value but never used.","'cnt' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'currentOrder' is defined but never used.","'Button' is defined but never used.","'CurrentOrder' is defined but never used.","'TempValue' is defined but never used.","'list' is defined but never used.","'newItem' is assigned a value but never used.","'newProduceArray' is defined but never used.","'newArrayCounter' is assigned a value but never used.","'tempOrder' is assigned a value but never used.","'form' is defined but never used.","'myId' is defined but never used.","'sortedOrder' is assigned a value but never used.",["165"],["166"],"no-global-assign","no-unsafe-negation"]